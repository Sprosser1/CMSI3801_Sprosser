class MinStack:
    def __init__(self):
        self.stack = []          # Main stack to store elements
        self.min_stack = []      # Stack to keep track of the minimum elements

    def push(self, x):
        self.stack.append(x)
        # If the min_stack is empty or x is smaller than the current minimum, push x to min_stack
        if not self.min_stack or x <= self.min_stack[-1]:
            self.min_stack.append(x)

    def pop(self):
        if self.stack:
            # If the element being popped is the minimum, also pop it from min_stack
            if self.stack[-1] == self.min_stack[-1]:
                self.min_stack.pop()
            self.stack.pop()

    def top(self):
        if self.stack:
            return self.stack[-1]

    def get_min(self):
        if self.min_stack:
            return self.min_stack[-1]